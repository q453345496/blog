<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xian.blog.dao.BlogTypeDao">

	<resultMap type="BlogType" id="BlogTypeResult">
		<id property="id" column="id" />
<!-- 		<result property="name" column="name" /> -->
<!-- 		<result property="rank" column="rank" /> -->
<!-- 		<result property="lastUpdateTime" column="lastUpdateTime" /> -->
	</resultMap>

	<select id="list" parameterType="Map" resultMap="BlogTypeResult">
		SELECT * FROM t_blog_type
		<where>
			<if test="name != null and name != '' ">
				AND name LIKE CONCAT('%', #{name}, '%')
			</if>
		</where>
		ORDER BY rank, name
		<if test="start != null and size != null">
			LIMIT #{start}, #{size}
		</if>

	</select>

	<select id="getTotal" parameterType="Map" resultType="Integer">
		SELECT COUNT(1) FROM t_blog_type
		<where>
			<if test="name != null and name != '' ">
				AND name LIKE CONCAT('%', #{name}, '%')
			</if>
		</where>
	</select>

	<insert id="save" parameterType="BlogType" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO t_blog_type (name, rank, last_update_time) VALUES(#{name}, #{rank}, #{lastUpdateTime})
	</insert>

	<update id="update" parameterType="BlogType">
		UPDATE t_blog_type
		<set>
			<if test="name != null and name != '' ">
				name = #{name},
			</if>
			<if test="rank != null">
				rank = #{rank},
			</if>
			<if test="lastUpdateTime != null">
				last_update_time = #{lastUpdateTime},
			</if>
			
		</set>
		WHERE id = #{id}
	</update>

	<delete id="delete" parameterType="Long">
		DELETE FROM t_blog_type WHERE id = #{id}
	</delete>
	
	<select id="get" parameterType="Long" resultMap="BlogTypeResult">
		SELECT * FROM t_blog_type
		WHERE id = #{id}
	</select>
</mapper> 