<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xian.blog.dao.SpecialTopicResourceDao">

	<sql id="sql_relate_where">
		<if test="topicId != null">
			AND r.topic_id = #{topicId}
		</if>
		<if test="blogTypeId != null">
			AND b.type_id = #{blogTypeId}
		</if>
		<if test="blogTitle != null and blogTitle != ''">
			AND b.title LIKE CONCAT('%', #{blogTitle}, '%')
		</if>
	</sql>
	
	<select id="listRelate" resultType="SpecialTopicResource">
		SELECT r.*, b.title AS blogTitle, b.type_id AS blogTypeId, t.name as blogTypeName FROM t_special_topic_resource r 
		LEFT JOIN t_blog b ON r.blog_id = b.id
		LEFT JOIN t_blog_type t ON t.id = b.type_id
		<where>
			<include refid="sql_relate_where"></include>
		</where>
		ORDER BY b.create_time
	</select>
	
	
	<sql id="sql_unrelate_where">
		<if test="blogTitle != null and blogTitle != ''">
				AND b.title LIKE CONCAT('%', #{blogTitle}, '%')
		</if>
		<if test="blogTypeId != null">
				AND b.type_id = #{blogTypeId}
		</if>
		<if test="topicId != null">
			AND NOT EXISTS (SELECT 1 FROM t_special_topic_resource r WHERE r.blog_id = b.id AND r.topic_id = #{topicId})
		</if>
	</sql>
	
	<select id="listUnRelate" resultType="SpecialTopicResource">
		SELECT b.id AS blogId, b.title AS blogTitle, b.type_id AS blogTypeId, t.name AS blogTypeName FROM t_blog b
		LEFT JOIN t_blog_type t ON t.id = b.type_id
		<where>
			<include refid="sql_unrelate_where"></include>
		</where>
		ORDER BY b.create_time
	</select>
	
</mapper>